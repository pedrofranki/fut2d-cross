(setplay :name cornerKickMuitoSimples :id 1 :invertible true
	 :version splanner_1.0
	 :players
		(list
			(playerRole :roleName Player6)
			(playerRole :roleName Player7)
			(playerRole :roleName Player8)
		) 
	 :abortCond (or (bowner :players  (list (player :team opp :number 1) (player :team opp :number 2) (player :team opp :number 3) (player :team opp :number 4) (player :team opp :number 5) (player :team opp :number 6) (player :team opp :number 7) (player :team opp :number 8) (player :team opp :number 9) (player :team opp :number 10) (player :team opp :number 11) )) (and (not (playm play_on)) (not (playm ck_our)) (not (playm ag_our))))
	 :steps
		(seq
			(step :id 0 :waitTime 28 :abortTime 40
				 :participants
					(list
						(at (playerRole :roleName Player6) (pt :x 52.5 :y -34))
						(at (playerRole :roleName Player7) (pt :x 48 :y -15))
						(at (playerRole :roleName Player8) (pt :x 46 :y -1.5))
					)
				 :condition (and (playm ck_our) (bpos :region (regNamed :name left)))
				 :leadPlayer (playerRole :roleName Player6)
				 :transitions
					(list 
						(nextStep :id 1
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (bto :players (list (playerRole :roleName Player7) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 1 :waitTime 3 :abortTime 30
				 :participants
					(list
						(at (playerRole :roleName Player7) (pt :x 48 :y -15))
						(at (playerRole :roleName Player8) (pt :x 46 :y -1.5))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player7) )))
				 :leadPlayer (playerRole :roleName Player7)
				 :transitions
					(list 
						(nextStep :id 2
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (bto :players (list (playerRole :roleName Player8) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 2 :waitTime 1 :abortTime 23
				 :participants
					(list
						(at (playerRole :roleName Player8) (pt :x 46 :y -1.5))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player8) )))
				 :leadPlayer (playerRole :roleName Player8)
				 :transitions
					(list 
						(nextStep :id 3
							 :condition (canShoot :players  (list (playerRole :roleName Player8) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (shoot) )
									)

								)
						)
					)
			)
			(step :id 3 :waitTime 0 :abortTime 0
				 :participants
					(list
						(at (playerRole :roleName Player8) (pt :x 46 :y -1.5))
					)
				 :condition (playm ag_our)
				 :leadPlayer (playerRole :roleName Player8)
				 :transitions
					(list 
						(finish :directives (list))
					)
			)
		)
)
(setplay :name kickOffToWingerIndirect5P :id 43 :invertible true
	:comment (The Taker passes the ball to the Midfielder. Midfielder passes the ball to the Defender. Defender passes the ball to a Winger. Winger passes the ball to an Taker.)
	:players 
		(list (playerRole :roleName Taker)
			(playerRole :roleName Attacker)
			(playerRole :roleName Midfielder)
			(playerRole :roleName Defender)
			(playerRole :roleName Winger)
		)
	:abortCond (or (bowner :players (player :team opp :number 0))
			(and (not (playm play_on))
			     (not (playm ko_our))
			)
	)
        :steps
		(seq
			(step :id 0 :waitTime 50 :abortTime 60
				:participants (list 
					Taker
					(at Midfielder (pt :x -9 :y 0))
					(at Attacker (pt :x -4.5 :y 9))
					(at Defender (pt :x -15 :y 24))
					(at Winger (pt :x 0 :y 32))
				)
				:condition (and (playm ko_our) (bpos :region (regNamed :name left)))
				:leadPlayer Taker
				:transitions
					(list						
						(nextStep :id 1
							:condition  (canPassPl :from Taker :to Midfielder)
							:directives (list
								(do :players Taker :actions (bto :players Midfielder))
								(do :players Midfielder :actions (receiveBall))
								(do :players Defender :actions (pos :region (ptRel :x 0 :y 10 :pt (pt :player Midfielder))))
							)
						)
					)
			)
			(step :id 1 :waitTime 0 :abortTime 10
				:participants (list 					(at Midfielder (pt :x -9 :y 0))
					(at Attacker (pt :x -4.5 :y 9))
					(at Defender (pt :x -15 :y 24))
					(at Winger (pt :x 0 :y 32)))
				:condition (and (playm play_on) (bowner :players Midfielder))
				:leadPlayer Midfielder
				:transitions
					(list						
						(nextStep :id 2
							:condition  (canPassPl :from  Midfielder :to Attacker)
							:directives (list
								(do :players Midfielder :actions (bto :players Attacker))
								(do :players Attacker :actions (receiveBall))
								(do :players Winger :actions (moveToOffSideLine :y 32))
								(do :players Defender :actions (pos :region (ptRel :x 0 :y 10 :pt (pt :player Midfielder))))
							)
						)
					)
			)
			(step :id 2 :waitTime 0 :abortTime 10
				:participants (list Attacker Defender Winger)
				:condition (and (playm play_on) (bowner :players Attacker))
				:leadPlayer Attacker
				:transitions
					(list						
						(nextStep :id 3
							:condition  (canPassPl :from Attacker :to Defender)
							:directives (list
								(do :players Attacker :actions (bto :players Defender))
								(do :players Defender :actions (receiveBall))
								(do :players Winger :actions (moveToOffSideLine :y 32))
							)
						)
					)
			)
			(step :id 3 :waitTime 0 :abortTime 15
				:participants (list Defender Winger)
				:condition (and (playm play_on) (bowner :players Defender))
				:leadPlayer Defender
				:transitions
					(list						
						(nextStep :id 4
							:condition  (canPassPl :from Defender :to Winger)
							:directives (list
								(do :players Defender :actions (bto :players Winger))
								(do :players Winger :actions (receiveBall))
							)
						)
					)
			)
			(step :id 4 :waitTime 0
				:participants (list Winger)
				:condition (and (playm play_on)
						(bowner :players Winger)
				)
				:leadPlayer Winger
				:transitions
					(list (finish))
			)
	)
)
(setplay :name goalieCatch_left_dynamic_fast :id 29 :invertible true
	:comment (The goalie kicks the ball in to a teammate on his left. This teammate, and the ones after him, keep passing the ball to the left and front)
	:players 
		(list (playerRole :roleName Goalie) 
			(playerRole :roleName LeftDefender) 
			(playerRole :roleName LeftMidfielder) 
			(playerRole :roleName LeftForward))
	:abortCond (or (bowner :players (player :team opp :number 0)) (and (not (playm gc_our)) (not (playm play_on))))
	:steps
		(seq
			(step :id 0 :waitTime 25 :abortTime 50 
				:participants (list 
					Goalie
					(at LeftDefender (pt :x -30 :y -15))
					(at LeftMidfielder (pt :x -18 :y -15))
					(at LeftForward (pt :x -2 :y -15))
				)
				:condition (and (playm gc_our) (bpos :region (regNamed :name our_penalty_box)))		
				:leadPlayer Goalie
				:transitions
					(list
						(nextStep :id 1
							:directives (list
								(do :players Goalie  	
									:actions (pos :region (pt :x -37 :y -17)))
							)
						)
					)
			)
			(step :id 1 :waitTime 20 :abortTime 50 
				:participants (list 
					Goalie
					(at LeftDefender (pt :x -35 :y -30))
					(at LeftMidfielder (pt :x -18 :y -20))
					(at LeftForward (pt :x -2 :y -15))
				)
				:condition (and (playm gc_our) (bpos :region (regNamed :name our_penalty_box))
					(ppos :players Goalie 
						:region (arc :center (pt :x -37 :y -17) :radius_small 0 :radius_large 1 
						:angle_begin 0 :angle_span 360)))		
				:leadPlayer Goalie
				:transitions
					(list
						(nextStep :id 2
							:condition 
								(canPassPl :from Goalie 
									:to LeftDefender)
							:directives (list
								(do :players Goalie  	
									:actions (bto :players LeftDefender :type fast))
								(do :players LeftDefender
									:actions (receiveBall))
							)
						)
					)
			)
			(step :id 2 :waitTime 5 :abortTime 30 
			      :participants (list 
					(at LeftDefender (pt :x -35 :y -30))
					(at LeftMidfielder (pt :x -18 :y -30))
					(at LeftForward (pt :x -2 :y -23))
				)
				:condition
					(and
						(playm play_on)
						(bowner :players LeftDefender)
					)
				:leadPlayer LeftDefender
				:transitions
					(list
						(nextStep :id 3
							:condition 
								(canPassPl :from LeftDefender 
									:to LeftMidfielder)
							:directives (list
								(do :players LeftDefender  	
									:actions (bto :players LeftMidfielder :type fast))
								(do :players LeftMidfielder
									:actions (receiveBall))
							)
						)
					)
			)
			(step :id 3 :waitTime 5 :abortTime 30 
			      :participants (list 
					(at LeftMidfielder (pt :x -18 :y -30))
					(at LeftForward (pt :x -2 :y -33))
				)
				:condition
					(and
						(playm play_on)
						(bowner :players LeftMidfielder)
					)
				:leadPlayer LeftMidfielder
				:transitions
					(list
						(nextStep :id 4
							:condition 
								(canPassPl :from LeftMidfielder 
									:to LeftForward)
							:directives (list
								(do :players LeftMidfielder  	
									:actions (bto :players LeftForward :type fast))
								(do :players LeftForward
									:actions (receiveBall))
							)
						)
					)
			)
			(step :id 4 :waitTime 0
			      :participants (list 
				LeftForward LeftForward
				)
				:condition
					(and
						(playm play_on)
						(bowner :players LeftForward)
					)
				:leadPlayer LeftForward
				:transitions
					(list
						(finish)
					)
			)
		)
)


