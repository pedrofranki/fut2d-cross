(setplay :name CornerKick :id 1 :invertable true
	 :version splanner_1.0
	 :players
		(list
			(playerRole :roleName Player10)
			(playerRole :roleName Player6)
			(playerRole :roleName Player7)
			(playerRole :roleName Player8)
			(playerRole :roleName Player9)
		) 
	 :abortCond (or (bowner :players  (list (player :team opp :number 1) (player :team opp :number 2) (player :team opp :number 3) (player :team opp :number 4) (player :team opp :number 5) (player :team opp :number 6) (player :team opp :number 7) (player :team opp :number 8) (player :team opp :number 9) (player :team opp :number 10) (player :team opp :number 11) )) (and (not (playm play_on)) (not (playm ck_our))))
	 :steps
		(seq
			(step :id 0 :waitTime 10 :abortTime 35
				 :participants
					(list
						(playerRole :roleName Player10)
						(at (playerRole :roleName Player6) (pt :x 36 :y 12))
						(at (playerRole :roleName Player7) (pt :x 41.5 :y -2))
						(at (playerRole :roleName Player8) (pt :x 48.5 :y 22))
						(at (playerRole :roleName Player9) (pt :x 35.5 :y 28))
					)
				 :condition (and (playm ck_our) (bpos :region (regNamed :name right)))
				 :leadPlayer (playerRole :roleName Player10)
				 :transitions
					(list 
						(nextStep :id 1
							 :condition (canPassPl  :from (list (playerRole :roleName Player10) ) :to (list (playerRole :roleName Player8) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player10) )
										:actions (list (bto :players (list (playerRole :roleName Player8) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 1 :waitTime 0 :abortTime 26
				 :participants
					(list
						(at (playerRole :roleName Player8) (pt :x 48.5 :y 22))
						(at (playerRole :roleName Player9) (pt :x 35.5 :y 28))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player8) )))
				 :leadPlayer (playerRole :roleName Player8)
				 :transitions
					(list 
						(nextStep :id 2
							 :condition (canPassPl  :from (list (playerRole :roleName Player8) ) :to (list (playerRole :roleName Player9) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player8) )
										:actions (list (bto :players (list (playerRole :roleName Player9) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player9) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 2 :waitTime 0 :abortTime 27
				 :participants
					(list
						(at (playerRole :roleName Player6) (pt :x 36 :y 12))
						(at (playerRole :roleName Player9) (pt :x 35.5 :y 28))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player9) )))
				 :leadPlayer (playerRole :roleName Player9)
				 :transitions
					(list 
						(nextStep :id 3
							 :condition (canPassPl  :from (list (playerRole :roleName Player9) ) :to (list (playerRole :roleName Player6) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (receiveBall) )
									)
									(do 	:players (list (playerRole :roleName Player9) )
										:actions (list (bto :players (list (playerRole :roleName Player6) ) :type normal) )
									)

								)
						)
					)
			)
			(step :id 3 :waitTime 0 :abortTime 26
				 :participants
					(list
						(at (playerRole :roleName Player6) (pt :x 36 :y 12))
						(at (playerRole :roleName Player7) (pt :x 41.5 :y -2))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player6) )))
				 :leadPlayer (playerRole :roleName Player6)
				 :transitions
					(list 
						(nextStep :id 4
							 :condition (canPassPl  :from (list (playerRole :roleName Player6) ) :to (list (playerRole :roleName Player7) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (bto :players (list (playerRole :roleName Player7) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 4 :waitTime 0 :abortTime 25
				 :participants
					(list
						(at (playerRole :roleName Player7) (pt :x 41.5 :y -2))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player7) )))
				 :leadPlayer (playerRole :roleName Player7)
				 :transitions
					(list 
						(finish :directives (list))
					)
			)
		)
)
