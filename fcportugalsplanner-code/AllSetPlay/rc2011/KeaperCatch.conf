(setplay :name KeaperCatch :id 1 :invertable true
	 :version splanner_1.0
	 :players
		(list
			(playerRole :roleName Player11)
			(playerRole :roleName Player1)
			(playerRole :roleName Player4)
			(playerRole :roleName Player6)
			(playerRole :roleName Player7)
		) 
	 :abortCond (or (bowner :players  (list (player :team opp :number 1) (player :team opp :number 2) (player :team opp :number 3) (player :team opp :number 4) (player :team opp :number 5) (player :team opp :number 6) (player :team opp :number 7) (player :team opp :number 8) (player :team opp :number 9) (player :team opp :number 10) (player :team opp :number 11) )) (and (not (playm play_on)) (not (playm gc_our))))
	 :steps
		(seq
			(step :id 0 :waitTime 15 :abortTime 56
				 :participants
					(list
						(playerRole :roleName Player11)
						(at (playerRole :roleName Player1) (pt :x -1.5 :y -1.5))
						(at (playerRole :roleName Player4) (pt :x -33 :y -8))
						(at (playerRole :roleName Player6) (pt :x -28 :y -25.5))
						(at (playerRole :roleName Player7) (pt :x -1 :y -30))
					)
				 :condition (playm gc_our)
				 :leadPlayer (playerRole :roleName Player11)
				 :transitions
					(list 
						(nextStep :id 1
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player1) )
										:actions (list (pos :region (pt :x 6.5 :y -0.5)) )
									)
									(do 	:players (list (playerRole :roleName Player11) )
										:actions (list (pos :region (pt :x -37.5 :y -19)) )
									)
									(do 	:players (list (playerRole :roleName Player4) )
										:actions (list (pos :region (pt :x -32 :y -19)) )
									)
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (pos :region (pt :x -22 :y -31)) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (pos :region (pt :x 1 :y -29)) )
									)

								)
						)
					)
			)
			(step :id 1 :waitTime 15 :abortTime 46
				 :participants
					(list
						(at (playerRole :roleName Player11) (pt :x -37.5 :y -19))
						(at (playerRole :roleName Player4) (pt :x -32 :y -19))
						(at (playerRole :roleName Player6) (pt :x -22 :y -31))
						(at (playerRole :roleName Player7) (pt :x 1 :y -29))
					)
				 :condition (and (playm gc_our) (bowner :players  (list (playerRole :roleName Player11) )))
				 :leadPlayer (playerRole :roleName Player11)
				 :transitions
					(list 
						(nextStep :id 2
							 :condition (canPassPl  :from (list (playerRole :roleName Player11) ) :to (list (playerRole :roleName Player4) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player11) )
										:actions (list (bto :players (list (playerRole :roleName Player4) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player4) )
										:actions (list (intercept) )
									)
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (pos :region (pt :x -19 :y -29.5)) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (pos :region (pt :x -0.5 :y -30)) )
									)

								)
						)
					)
			)
			(step :id 2 :waitTime 0 :abortTime 28
				 :participants
					(list
						(at (playerRole :roleName Player4) (pt :x -32 :y -19))
						(at (playerRole :roleName Player6) (pt :x -19 :y -29.5))
						(at (playerRole :roleName Player7) (pt :x -0.5 :y -30))
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player4) )))
				 :leadPlayer (playerRole :roleName Player4)
				 :transitions
					(list 
						(nextStep :id 3
							 :condition (canPassPl  :from (list (playerRole :roleName Player4) ) :to (list (playerRole :roleName Player6) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player4) )
										:actions (list (bto :players (list (playerRole :roleName Player6) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (intercept) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (moveToOffSideLine :y-29.5) )
									)

								)
						)
					)
			)
			(step :id 3 :waitTime 0 :abortTime 29
				 :participants
					(list
						(at (playerRole :roleName Player6) (pt :x -19 :y -29.5))
						(playerRole :roleName Player7)
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player6) )))
				 :leadPlayer (playerRole :roleName Player6)
				 :transitions
					(list 
						(nextStep :id 4
							 :condition (canPassPl  :from (list (playerRole :roleName Player6) ) :to (list (playerRole :roleName Player7) ))
							 :directives
								(list
									(do 	:players (list (playerRole :roleName Player6) )
										:actions (list (bto :players (list (playerRole :roleName Player7) ) :type normal) )
									)
									(do 	:players (list (playerRole :roleName Player7) )
										:actions (list (receiveBall) )
									)

								)
						)
					)
			)
			(step :id 4 :waitTime 0 :abortTime 0
				 :participants
					(list
						(at (playerRole :roleName Player11) (pt :x -37.5 :y -19))
						(at (playerRole :roleName Player1) (pt :x 6.5 :y -0.5))
						(at (playerRole :roleName Player4) (pt :x -32 :y -19))
						(at (playerRole :roleName Player6) (pt :x -19 :y -29.5))
						(playerRole :roleName Player7)
					)
				 :condition (and (playm play_on) (bowner :players  (list (playerRole :roleName Player7) )))
				 :leadPlayer (playerRole :roleName Player7)
				 :transitions
					(list 
						(finish :directives (list))
					)
			)
		)
)
